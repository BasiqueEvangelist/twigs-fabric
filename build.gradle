plugins {
  id 'fabric-loom' version '0.11-SNAPSHOT'
  id 'maven-publish'

  id 'com.modrinth.minotaur' version '1.1.0'
  id 'com.matthewprenger.cursegradle' version '1.4.0'
}

/* Setup */

def ENV = System.getenv()

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
tasks.withType(JavaCompile).configureEach { it.options.release = 17 }

archivesBaseName = "${project.mod_id}-fabric"
group = project.maven_group

String ver = "${project.version}+${project.ver_minecraft}"
version = ENV.GITHUB_ACTIONS ? "${ver}.build.${ENV.GITHUB_RUN_NUMBER}" : ver

/* Dependencies */

repositories {
  maven {
    name = 'Terraformers'
    url  = 'https://maven.terraformersmc.com/releases/'
  }
}

dependencies {
  minecraft "com.mojang:minecraft:${project.ver_minecraft}"
  mappings "net.fabricmc:yarn:${project.ver_minecraft}+build.${project.ver_yarn}:v2"
  modImplementation "net.fabricmc:fabric-loader:${project.ver_loader}"

  modImplementation "net.fabricmc.fabric-api:fabric-api:${project.ver_fabric}"
  modImplementation "com.terraformersmc:modmenu:${project.ver_mod_menu}"
}

loom {
  runtimeOnlyLog4j = true
  accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
}

/* Resource Processing */

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

processResources {
  inputs.property 'version', version
  filesMatching('fabric.mod.json') { expand 'version': version }

  doLast {
    def start = System.currentTimeMillis()
    def minif = 0
    def bytes = 0
    fileTree(dir: outputs.files.asPath, include: '**/*.json').each {
      File file = it
      minif++
      def oldLength = file.length()
      file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
      bytes += oldLength - file.length()
    }
    println('Minified ' + minif + ' json files. Saved ' + bytes + ' bytes. Took ' + (System.currentTimeMillis() - start) + 'ms.')
  }
}

jar { from('README.md', 'LICENSE', 'LICENSE_ASSETS') exclude('.cache') }

/* Publishing */

publishing { publications { mavenJava(MavenPublication) { from components.java } } }

task releaseVersion(dependsOn: [ build, 'github', 'modrinth', 'curseforge' ])
apply from: 'gradle/publishing/github.gradle'
apply from: 'gradle/publishing/modrinth.gradle'
apply from: 'gradle/publishing/curseforge.gradle'
